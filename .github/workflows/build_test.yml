name: Build & Test Workflow
on:
  push:
    branches: [develop, main]
    paths:
      - '.github/workflows/*'
      - 'unicorn_contracts/**'
      - 'unicorn_properties/**'
      - 'unicorn_web/**'
  pull_request:
    branches: [develop, main]
    paths:
      - './github/workflows/*'
      - 'unicorn_contracts/**'
      - 'unicorn_properties/**'
      - 'unicorn_web/**'

env:
  AWS_REGION : "ap-southeast-2"

permissions:
  id-token: write
  contents: read

jobs:
  service:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1
      matrix:
        folder: [unicorn_shared, unicorn_contracts, unicorn_properties, unicorn_web]

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Setup NodeJS and NPM
      uses: actions/setup-node@v3
      with:
        node-version: 18.x
        cache: 'pnpm'

    - name: Setup PNPM 
      uses: pnpm/action-setup@v2
    
    - name: Get pnpm store directory
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

    - uses: actions/cache@v3
      name: Setup pnpm cache
      with:
        path: ${{ env.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: arn:aws:iam::819998446679:role/GithubActions-ServerlessDeveloperExperience
        aws-region: ${{ env.AWS_REGION }}

    - name: Configure AWS SAM
      uses: aws-actions/setup-sam@v2
      with: 
        use-installer: true

    - name: Initialize and install dependencies
      run: pnpm install
      working-directory: ${{ matrix.folder }}

    - name: Build the SAM template
      run: sam build 
      working-directory: ${{ matrix.folder }}

    - name: Deploy the SAM template
      run: sam deploy --no-confirm-changeset
      working-directory: ${{ matrix.folder }}

    - name: Run integration tests
      run: make integration-test
      working-directory: ${{ matrix.folder }}
